name: CI
env:
  ALLOWED_URIS: "https://github.com https://api.github.com"
  TRUSTED_PUBLIC_KEYS: "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ="
  SUBSTITUTERS: "https://cache.nixos.org/ https://cache.iog.io"
on:
  pull_request:
  push:
    branches:
    - main
jobs:
  typecheck:
    name: Typecheck Agda and build Haskell
    runs-on: self-hosted
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    - name: 🛠️ Install Nix
      uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        install_url: https://releases.nixos.org/nix/nix-2.10.3/install
        extra_nix_config: |
          allowed-uris = ${{ env.ALLOWED_URIS }}
          trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ env.SUBSTITUTERS }}
          experimental-features = nix-command flakes
    - name: 🧪 Typecheck Agda
      run: |
        nix build --show-trace .#peras
    - name: 🧪 Build `peras-iosim`.
      run: |
        nix build --show-trace .#peras-iosim
    - name: 🧪 Build `peras-quickcheck`.
      run: |
        nix build --show-trace .#peras-quickcheck-test
    - name: 🧪 Build `random-forks`.
      run: |
        nix build --show-trace .#random-forks
    - name: 🧪 Build `peras_rust`.
      run: |
        nix build --show-trace .#peras_rust
    - name: 🧪 Build `peras_topology`.
      run: |
        nix build --show-trace .#peras_topology
  simulate-hs:
    name: Run `peras-iosim`
    runs-on: self-hosted
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    - name: 🛠️ Install Nix
      uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        install_url: https://releases.nixos.org/nix/nix-2.10.3/install
        extra_nix_config: |
          allowed-uris = ${{ env.ALLOWED_URIS }}
          trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ env.SUBSTITUTERS }}
          experimental-features = nix-command flakes
    - name: 🏃 Simulate pseudo-Praos on a small network
      run: |
        nix run .#peras-iosim -- \
          --parameter-file peras-iosim/small-network.yaml \
          --protocol-file peras-iosim/pseudo-praos.yaml \
          --trace-file "/dev/null" \
          --result-file "/dev/null"
    - name: 🏃 Simulate pseudo-Peras on a small network
      run: |
        nix run .#peras-iosim -- \
          --parameter-file peras-iosim/small-network.yaml \
          --protocol-file peras-iosim/pseudo-peras.yaml \
          --trace-file "/dev/null" \
          --result-file "/dev/null"
  tests:
    name: Run tests
    runs-on: self-hosted
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
    - name: 🛠️ Install Nix
      uses: cachix/install-nix-action@v21
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        install_url: https://releases.nixos.org/nix/nix-2.10.3/install
        extra_nix_config: |
          allowed-uris = ${{ env.ALLOWED_URIS }}
          trusted-public-keys = ${{ env.TRUSTED_PUBLIC_KEYS }}
          substituters = ${{ env.SUBSTITUTERS }}
          experimental-features = nix-command flakes
    - name: 🔬 Test with `peras-quickcheck-tests`
      run: |
        nix run .#peras-quickcheck-test
